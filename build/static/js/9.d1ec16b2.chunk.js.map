{"version":3,"sources":["components/views/Reviews.js"],"names":["Reviews","moviesId","useParams","useState","reviews","setReviews","setError","useEffect","Api","fetchApiReviews","then","catch","error","results","length","map","author","id","content"],"mappings":"gOAKe,SAASA,IAAW,IACzBC,EAAaC,cAAbD,SADwB,EAGFE,mBAAS,MAHP,mBAGzBC,EAHyB,KAGhBC,EAHgB,OAINF,mBAAS,IAJH,mBAIlBG,GAJkB,WAYhC,OANAC,qBAAU,WACRC,IAAIC,gBAAgBR,GACjBS,KAAKL,GACLM,OAAM,SAACC,GAAD,OAAWN,EAASM,QAC5B,CAACX,IAEGG,GAAWA,EAAQS,QAAQC,OAAS,EACzC,6BACGV,EAAQS,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,QAAf,OACnB,+BACE,iEAAWF,KADb,IACyB,4BAAIE,MADpBD,QAMb","file":"static/js/9.d1ec16b2.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Api from \"../../services/FetchAPI\";\r\n\r\nexport default function Reviews() {\r\n  const { moviesId } = useParams();\r\n\r\n  const [reviews, setReviews] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    Api.fetchApiReviews(moviesId)\r\n      .then(setReviews)\r\n      .catch((error) => setError(error));\r\n  }, [moviesId]);\r\n\r\n  return reviews && reviews.results.length > 0 ? (\r\n    <ul>\r\n      {reviews.results.map(({ author, id, content }) => (\r\n        <li key={id}>\r\n          <p>Автор: {author}</p> <p>{content}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  ) : (\r\n    <p>Сдесь, обзоры отсутствуют</p>\r\n  );\r\n}\r\n"],"sourceRoot":""}