{"version":3,"sources":["services/FetchAPI.js","components/views/MoviesViews.js"],"names":["api","fetchApiMovies","page","fetch","then","r","ok","json","Promise","reject","Error","fetchApiSearch","query","fetchApiOneMovie","idMovie","fetchApiReviews","fetchApiCasts","MoviesViews","useState","setPage","valueSearch","setValueSearch","moviesSearch","setMoviesSearch","setError","url","useRouteMatch","myFetch","Api","incrementPage","catch","error","state","onSubmit","e","preventDefault","htmlFor","id","name","type","autoComplete","autoFocus","value","onChange","currentTarget","results","map","original_title","to","onClick"],"mappings":"2IAAA,OAoEA,IAAMA,EAAM,CACVC,eArEF,SAAwBC,GAGtB,OAAOC,MAAM,GAAD,OADgB,gDAChB,oBAFA,mCAEA,6BACgDD,IAC1DE,MAAK,SAACC,GACN,OAAIA,EAAEC,GACGD,EAAEE,OAEJC,QAAQC,OAAO,IAAIC,MAAM,oIA6DlCC,eAzDF,SAAwBT,EAAMU,GAG5B,OAAOT,MAAM,GAAD,OADgB,+BAChB,iCAFA,mCAEA,kBACkDS,EADlD,6BAC4EV,EAD5E,yBAEVE,MAAK,SAACC,GACN,OAAIA,EAAEC,GACGD,EAAEE,OAEJC,QAAQC,OAAO,IAAIC,MAAM,oIAiDlCG,iBA7CF,SAA0BC,GAIxB,OAAOX,MAAM,GAAD,OAFmB,uCAEnB,OACkBW,EADlB,oBAHA,mCAGA,iBAEVV,MAAK,SAACC,GACN,OAAIA,EAAEC,GACGD,EAAEE,OAEJC,QAAQC,OAAO,IAAIC,MAAM,8HAoClCK,gBAhCF,SAAyBD,GAIvB,OAAOX,MAAM,GAAD,OAFmB,uCAEnB,OACkBW,EADlB,4BAHA,qCAKVV,MAAK,SAACC,GACN,OAAIA,EAAEC,GACGD,EAAEE,OAEJC,QAAQC,OAAO,IAAIC,MAAM,sLAuBlCM,cAnBF,SAAuBF,GAIrB,OAAOX,MAAM,GAAD,OAFmB,uCAEnB,OACkBW,EADlB,4BAHA,mCAGA,wBAEVV,MAAK,SAACC,GACN,OAAIA,EAAEC,GACGD,EAAEE,OAEJC,QAAQC,OAAO,IAAIC,MAAM,uLAWrBV,a,+HCrEA,SAASiB,IAAe,IAAD,EACZC,mBAAS,GADG,mBAC7BhB,EAD6B,KACvBiB,EADuB,OAEED,mBAAS,IAFX,mBAE7BE,EAF6B,KAEhBC,EAFgB,OAGIH,mBAAS,MAHb,mBAG7BI,EAH6B,KAGfC,EAHe,OAKVL,mBAAS,IALC,mBAKtBM,GALsB,WAS5BC,EAAQC,cAARD,IAYFE,EAAU,WACdC,UAAIjB,eAAeT,EAAMkB,GACtBhB,KAAKmB,GACLnB,KAAKyB,KACLC,OAAM,SAACC,GAAD,OAAWP,EAASO,OAQzBF,EAAgB,WACpBV,GAAQ,SAACa,GAAD,OAAWA,EAAQ,MAO7B,OACE,gCACE,uBAAMC,SA7BQ,SAACC,GACjBA,EAAEC,iBAEFR,KA0BE,UACE,uBAAOS,QAAQ,IAAf,+IACA,uBACEC,GAAG,IACHC,KAAK,OACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,MAAOtB,EACPuB,SAxBmB,SAACT,GAAO,IACzBQ,EAAUR,EAAEU,cAAZF,MACRrB,EAAeqB,MAwBX,wBAAQH,KAAK,SAAb,+CAEDjB,GACC,gCACE,6BACGA,EAAauB,QAAQC,KAAI,gBAAGC,EAAH,EAAGA,eAAgBV,EAAnB,EAAmBA,GAAnB,OACxB,6BACGf,GACC,cAAC,IAAD,CAAS0B,GAAE,UAAKvB,EAAL,YAAYY,GAAvB,SAA8BU,KAFzBV,QAOb,wBAAQY,QA/BC,WACftB,KA8BM","file":"static/js/8.3b5f41b3.chunk.js","sourcesContent":["function fetchApiMovies(page) {\r\n  const KEY = \"6afe4b8475996e1addf24229c39e89a6\";\r\n  const GENERAL_LINK_TRENDS = \"https://api.themoviedb.org/3/trending/all/day\";\r\n  return fetch(\r\n    `${GENERAL_LINK_TRENDS}?api_key=${KEY}&language=ru&page=${page}`\r\n  ).then((r) => {\r\n    if (r.ok) {\r\n      return r.json();\r\n    }\r\n    return Promise.reject(new Error(\"Такого запроса не існує\"));\r\n  });\r\n}\r\n\r\nfunction fetchApiSearch(page, query) {\r\n  const KEY = \"6afe4b8475996e1addf24229c39e89a6\";\r\n  const GENERAL_LINK_TRENDS = \"https://api.themoviedb.org/3\";\r\n  return fetch(\r\n    `${GENERAL_LINK_TRENDS}/search/movie?api_key=${KEY}&query=${query}&language=ru&page=${page}&include_adult=false`\r\n  ).then((r) => {\r\n    if (r.ok) {\r\n      return r.json();\r\n    }\r\n    return Promise.reject(new Error(\"Такого запроса не існує\"));\r\n  });\r\n}\r\n\r\nfunction fetchApiOneMovie(idMovie) {\r\n  const KEY = \"6afe4b8475996e1addf24229c39e89a6\";\r\n  const GENERAL_LINK_ONE_MOVIE = \"https://api.themoviedb.org/3/movie/\";\r\n\r\n  return fetch(\r\n    `${GENERAL_LINK_ONE_MOVIE}${idMovie}?api_key=${KEY}&language=ru`\r\n  ).then((r) => {\r\n    if (r.ok) {\r\n      return r.json();\r\n    }\r\n    return Promise.reject(new Error(\"Такого фільма не існує\"));\r\n  });\r\n}\r\n\r\nfunction fetchApiReviews(idMovie) {\r\n  const KEY = \"6afe4b8475996e1addf24229c39e89a6\";\r\n  const GENERAL_LINK_ONE_MOVIE = \"https://api.themoviedb.org/3/movie/\";\r\n\r\n  return fetch(\r\n    `${GENERAL_LINK_ONE_MOVIE}${idMovie}/reviews?api_key=${KEY}`\r\n  ).then((r) => {\r\n    if (r.ok) {\r\n      return r.json();\r\n    }\r\n    return Promise.reject(new Error(\"Такої сторінки з кастами не існує\"));\r\n  });\r\n}\r\n\r\nfunction fetchApiCasts(idMovie) {\r\n  const KEY = \"6afe4b8475996e1addf24229c39e89a6\";\r\n  const GENERAL_LINK_ONE_MOVIE = \"https://api.themoviedb.org/3/movie/\";\r\n\r\n  return fetch(\r\n    `${GENERAL_LINK_ONE_MOVIE}${idMovie}/credits?api_key=${KEY}&language=ru&page=1`\r\n  ).then((r) => {\r\n    if (r.ok) {\r\n      return r.json();\r\n    }\r\n    return Promise.reject(new Error(\"Такої сторінки з кастами не існує\"));\r\n  });\r\n}\r\n\r\nconst api = {\r\n  fetchApiMovies,\r\n  fetchApiSearch,\r\n  fetchApiOneMovie,\r\n  fetchApiReviews,\r\n  fetchApiCasts,\r\n};\r\nexport default api;\r\n","import { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nimport Api from \"../../services/FetchAPI\";\r\n\r\nexport default function MoviesViews() {\r\n  const [page, setPage] = useState(1);\r\n  const [valueSearch, setValueSearch] = useState(\"\");\r\n  const [moviesSearch, setMoviesSearch] = useState(null);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // const useParamss = useParams();\r\n  // console.log(useParamss);\r\n  const { url } = useRouteMatch();\r\n  // console.log(useRouteMatc);\r\n\r\n  // useEffect(() => {}, [page, valueSearch]);\r\n\r\n  const onSubmite = (e) => {\r\n    e.preventDefault();\r\n\r\n    myFetch();\r\n    // setValueSearch(\"\");\r\n  };\r\n\r\n  const myFetch = () => {\r\n    Api.fetchApiSearch(page, valueSearch)\r\n      .then(setMoviesSearch)\r\n      .then(incrementPage())\r\n      .catch((error) => setError(error));\r\n  };\r\n\r\n  const onValueSearchInput = (e) => {\r\n    const { value } = e.currentTarget;\r\n    setValueSearch(value);\r\n  };\r\n\r\n  const incrementPage = () => {\r\n    setPage((state) => state + 1);\r\n  };\r\n  const nextPage = () => {\r\n    myFetch();\r\n  };\r\n  // console.log(moviesSearch && moviesSearch.results.filter(({ id }) => id));\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmite}>\r\n        <label htmlFor=\"1\"> Введите название фильма</label>\r\n        <input\r\n          id=\"1\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          value={valueSearch}\r\n          onChange={onValueSearchInput}\r\n        ></input>\r\n        <button type=\"submit\">Поиск</button>\r\n      </form>\r\n      {moviesSearch && (\r\n        <div>\r\n          <ul>\r\n            {moviesSearch.results.map(({ original_title, id }) => (\r\n              <li key={id}>\r\n                {moviesSearch && (\r\n                  <NavLink to={`${url}/${id}`}>{original_title}</NavLink>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button onClick={nextPage}>Следующая страница</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}