{"version":3,"sources":["components/views/MovieDetailsPage.js"],"names":["Api","lazy","Cast","Reviews","Loader","MovieCard","moviesId","useParams","useState","movie","setMovie","setError","loader","setLoader","useEffect","fetchApiOneMovie","then","catch","error","finally","a","src","poster_path","alt","title","vote_average","Math","round","overview","genres","map","id","name","to","path","casts"],"mappings":"iOAQMA,EAAMC,gBAAK,kBAAM,gCACjBC,EAAOD,gBAAK,kBAAM,gCAClBE,EAAUF,gBAAK,kBAAM,gCACrBG,EAASH,gBAAK,kBAAM,sDAEX,SAASI,IAAa,IAC3BC,EAAaC,cAAbD,SAD0B,EAGRE,mBAAS,MAHD,mBAG3BC,EAH2B,KAGpBC,EAHoB,OAIRF,mBAAS,MAJD,mBAIpBG,GAJoB,aAKNH,oBAAS,GALH,mBAK3BI,EAL2B,KAKnBC,EALmB,KAOlCC,qBAAU,WACRD,GAAU,GACVb,EAAIe,iBAAiBT,GAClBU,KAAKN,GACLO,OAAM,SAACC,GAAD,OAAWP,EAASO,MAC1BC,SAAQ,kBAAMN,GAAU,QAC1B,CAACP,IAEJ,IAAqBc,EAGrB,OACE,gCACGR,GAAU,cAACR,EAAD,IAEX,qBACEiB,IAAKZ,GAAK,yCAAsCA,EAAMa,aACtDC,IAAI,KAGN,6BAAKd,GAASA,EAAMe,QACpB,kHAAoBf,IAbHW,EAawBX,EAAMgB,aAZ1CC,KAAKC,MAAW,IAAJP,EAAW,KAY5B,OACA,gCACE,kFACA,4BAAIX,GAASA,EAAMmB,cAErB,gCACE,0DACA,6BACGnB,GACCA,EAAMoB,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAkB,+BAAcA,EAAd,MAASD,WAGlD,gCACE,uBACA,cAAC,IAAD,CAAME,GAAE,kBAAa3B,EAAb,SAAR,kDAFF,IAEsD,uBACpD,cAAC,IAAD,CAAM2B,GAAE,kBAAa3B,EAAb,YAAR,wDACA,uBACA,cAAC,IAAD,CAAO4B,KAAK,yBAAZ,SACGzB,GAAS,cAACP,EAAD,CAAMiC,MAAO1B,MAEzB,cAAC,IAAD,CAAOyB,KAAK,4BAAZ,SACE,cAAC/B,EAAD","file":"static/js/12.03b4de11.chunk.js","sourcesContent":["import { useParams, Link, Route } from \"react-router-dom\";\r\nimport { useState, useEffect, lazy } from \"react\";\r\n\r\n// import Api from \"../../services/FetchAPI\";\r\n// import Cast from \"./Cast\";\r\n// import Reviews from \"./Reviews\";\r\n// import Loader from \"../loader/loader\";\r\n\r\nconst Api = lazy(() => import(\"../../services/FetchAPI\"));\r\nconst Cast = lazy(() => import(\"./Cast\"));\r\nconst Reviews = lazy(() => import(\"./Reviews\"));\r\nconst Loader = lazy(() => import(\"../loader/loader\"));\r\n\r\nexport default function MovieCard() {\r\n  const { moviesId } = useParams();\r\n\r\n  const [movie, setMovie] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoader(true);\r\n    Api.fetchApiOneMovie(moviesId)\r\n      .then(setMovie)\r\n      .catch((error) => setError(error))\r\n      .finally(() => setLoader(false));\r\n  }, [moviesId]);\r\n  // console.log(movie.title);\r\n  const calckRating = (a) => {\r\n    return Math.round((a * 100) / 10);\r\n  };\r\n  return (\r\n    <div>\r\n      {loader && <Loader />}\r\n\r\n      <img\r\n        src={movie && `https://image.tmdb.org/t/p/w200${movie.poster_path}`}\r\n        alt=\"\"\r\n      ></img>\r\n\r\n      <h1>{movie && movie.title}</h1>\r\n      <p>Средняя оценка: {movie && calckRating(movie.vote_average)}%</p>\r\n      <div>\r\n        <h2>Описание</h2>\r\n        <p>{movie && movie.overview}</p>\r\n      </div>\r\n      <div>\r\n        <h3>Жанр</h3>\r\n        <ul>\r\n          {movie &&\r\n            movie.genres.map(({ id, name }) => <li key={id}>{name} </li>)}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <hr />\r\n        <Link to={`/movies/${moviesId}/cast`}>Актеры</Link> <br />\r\n        <Link to={`/movies/${moviesId}/reviews`}>Обзоры (Eng)</Link>\r\n        <hr />\r\n        <Route path=\"/movies/:moviesId/cast\">\r\n          {movie && <Cast casts={movie} />}\r\n        </Route>\r\n        <Route path=\"/movies/:moviesId/reviews\">\r\n          <Reviews />\r\n        </Route>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}