{"version":3,"sources":["components/views/MoviesViews.js"],"names":["MoviesViews","useState","page","setPage","valueSearch","setValueSearch","moviesSearch","setMoviesSearch","setError","url","useRouteMatch","location","useLocation","myFetch","Api","fetchApiSearch","then","incrementPage","catch","error","state","onSubmit","e","preventDefault","htmlFor","id","name","type","autoComplete","autoFocus","value","onChange","currentTarget","results","map","original_title","to","pathname","from","onClick"],"mappings":"wOAMe,SAASA,IAAe,IAAD,EACZC,mBAAS,GADG,mBAC7BC,EAD6B,KACvBC,EADuB,OAEEF,mBAAS,IAFX,mBAE7BG,EAF6B,KAEhBC,EAFgB,OAGIJ,mBAAS,MAHb,mBAG7BK,EAH6B,KAGfC,EAHe,OAKVN,mBAAS,IALC,mBAKtBO,GALsB,WAS5BC,EAAQC,cAARD,IACFE,EAAWC,cAYXC,EAAU,WACdC,IAAIC,eAAeb,EAAME,GACtBY,KAAKT,GACLS,KAAKC,KACLC,OAAM,SAACC,GAAD,OAAWX,EAASW,OAQzBF,EAAgB,WACpBd,GAAQ,SAACiB,GAAD,OAAWA,EAAQ,MAO7B,OACE,gCACE,uBAAMC,SA7BQ,SAACC,GACjBA,EAAEC,iBAEFV,KA0BE,UACE,uBAAOW,QAAQ,IAAf,+IACA,uBACEC,GAAG,IACHC,KAAK,OACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,MAAO1B,EACP2B,SAxBmB,SAACT,GAAO,IACzBQ,EAAUR,EAAEU,cAAZF,MACRzB,EAAeyB,MAwBX,wBAAQH,KAAK,SAAb,+CAEDrB,GACC,gCACE,6BACGA,EAAa2B,QAAQC,KAAI,gBAAGC,EAAH,EAAGA,eAAgBV,EAAnB,EAAmBA,GAAnB,OACxB,6BACGnB,GACC,cAAC,IAAD,CACE8B,GAAI,CACFC,SAAS,GAAD,OAAK5B,EAAL,YAAYgB,GACpBL,MAAO,CAAEkB,KAAM3B,IAHnB,SAMGwB,KAREV,QAcb,wBAAQc,QAtCC,WACf1B,KAqCM","file":"static/js/7.3fe048f8.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nimport Api from \"../../services/FetchAPI\";\r\n\r\nexport default function MoviesViews() {\r\n  const [page, setPage] = useState(1);\r\n  const [valueSearch, setValueSearch] = useState(\"\");\r\n  const [moviesSearch, setMoviesSearch] = useState(null);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // const useParamss = useParams();\r\n  // console.log(useParamss);\r\n  const { url } = useRouteMatch();\r\n  const location = useLocation();\r\n  // console.log(useRouteMatc);\r\n\r\n  // useEffect(() => {}, [page, valueSearch]);\r\n\r\n  const onSubmite = (e) => {\r\n    e.preventDefault();\r\n\r\n    myFetch();\r\n    // setValueSearch(\"\");\r\n  };\r\n\r\n  const myFetch = () => {\r\n    Api.fetchApiSearch(page, valueSearch)\r\n      .then(setMoviesSearch)\r\n      .then(incrementPage())\r\n      .catch((error) => setError(error));\r\n  };\r\n\r\n  const onValueSearchInput = (e) => {\r\n    const { value } = e.currentTarget;\r\n    setValueSearch(value);\r\n  };\r\n\r\n  const incrementPage = () => {\r\n    setPage((state) => state + 1);\r\n  };\r\n  const nextPage = () => {\r\n    myFetch();\r\n  };\r\n  // console.log(moviesSearch && moviesSearch.results.filter(({ id }) => id));\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmite}>\r\n        <label htmlFor=\"1\"> Введите название фильма</label>\r\n        <input\r\n          id=\"1\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          value={valueSearch}\r\n          onChange={onValueSearchInput}\r\n        ></input>\r\n        <button type=\"submit\">Поиск</button>\r\n      </form>\r\n      {moviesSearch && (\r\n        <div>\r\n          <ul>\r\n            {moviesSearch.results.map(({ original_title, id }) => (\r\n              <li key={id}>\r\n                {moviesSearch && (\r\n                  <NavLink\r\n                    to={{\r\n                      pathname: `${url}/${id}`,\r\n                      state: { from: location },\r\n                    }}\r\n                  >\r\n                    {original_title}\r\n                  </NavLink>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button onClick={nextPage}>Следующая страница</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}